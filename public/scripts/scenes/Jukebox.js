var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SPACE.Jukebox = (function(_super) {
  __extends(Jukebox, _super);

  Jukebox.prototype.playlist = null;

  Jukebox.prototype.current = null;

  function Jukebox(bg) {
    this._whileplaying = __bind(this._whileplaying, this);
    this._onfinish = __bind(this._onfinish, this);
    this._onplay = __bind(this._onplay, this);
    this._starting = __bind(this._starting, this);
    var middlePoint;
    Jukebox.__super__.constructor.call(this, bg);
    middlePoint = new PIXI.Point(window.innerWidth * .5, window.innerHeight * .5);
    this.eq = new SPACE.Equalizer(middlePoint, {
      minLength: 0,
      maxLength: 200
    });
    this.addChild(this.eq);
    this.sc = new SPACE.SoundCloud(SPACE.SOUNDCLOUD.id);
    this.playlist = [];
    this._predefinedPlaylist();
  }

  Jukebox.prototype._events = function() {};

  Jukebox.prototype._predefinedPlaylist = function() {
    this.add('https://soundcloud.com/chonch-2/courte-danse-macabre');
    this.add('https://soundcloud.com/chonch-2/mouais');
    this.add('https://soundcloud.com/huhwhatandwhere/sets/supreme-laziness-the-celestics');
    this.add('https://soundcloud.com/chonch-2/cacaco-2');
    this.add('https://soundcloud.com/chonch-2/duodenum');
    return this.add('https://soundcloud.com/chonch-2/little-green-monkey');
  };

  Jukebox.prototype.draw = function() {
    return this.eq.draw();
  };

  Jukebox.prototype.update = function(delta) {
    var i, track, _i, _len, _ref;
    this.eq.update(delta);
    _ref = this.playlist;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      track = _ref[i];
      track.update(delta);
    }
    if (this.playlist.length > 0) {
      if (this.current === null) {
        return this.next();
      }
    }
  };

  Jukebox.prototype.add = function(soundOrPlaylist) {
    var middlePoint;
    middlePoint = new PIXI.Point(window.innerWidth * .5, window.innerHeight * .5);
    return this.sc.getSoundOrPlaylist(soundOrPlaylist, (function(_this) {
      return function(o) {
        var data, spaceship, track, tracks, _i, _len, _results;
        tracks = null;
        if (o.hasOwnProperty('tracks')) {
          tracks = o.tracks;
        } else {
          tracks = [];
          tracks.push(o);
        }
        _results = [];
        for (_i = 0, _len = tracks.length; _i < _len; _i++) {
          data = tracks[_i];
          spaceship = new SPACE.Spaceship(middlePoint, _this.eq.radius);
          _this.addChild(spaceship);
          track = new SPACE.Track(data, spaceship);
          track.durationBeforeLaunching = _this.getDurationFromPosition(_this.playlist.length - 1);
          _this.playlist.push(track);
          _results.push(_this.totalDuration += data.duration);
        }
        return _results;
      };
    })(this));
  };

  Jukebox.prototype.getDurationFromPosition = function(position) {
    var duration, i, track, _i, _len, _ref;
    duration = 0;
    _ref = this.playlist;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      track = _ref[i];
      duration += track.data.duration;
      if (i === position) {
        break;
      }
    }
    return duration;
  };

  Jukebox.prototype.next = function(track) {
    if (this.current) {
      this._onfinish();
    }
    this.current = this.playlist.shift();
    return this.sc.streamSound(this.current.data, this._starting, {
      onplay: this._onplay,
      onfinish: this._onfinish,
      onstop: this._onstop,
      whileplaying: this._whileplaying
    });
  };

  Jukebox.prototype.play = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      return this.current.sound.play();
    }
  };

  Jukebox.prototype.resume = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      return this.current.sound.resume();
    }
  };

  Jukebox.prototype.pause = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      this.current.sound.pause();
      return this.eq.mute();
    }
  };

  Jukebox.prototype.stop = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      this.current.sound.stop();
      return this.eq.mute();
    }
  };

  Jukebox.prototype._starting = function(sound) {
    this.current.sound = sound;
    return document.dispatchEvent(SPACE.Track.ON_PLAY());
  };

  Jukebox.prototype._onplay = function() {
    return console.log('onplay');
  };

  Jukebox.prototype._onfinish = function() {
    this.current.sound.stop();
    this.current = null;
    this.eq.mute();
    this.tmpPosition = 0;
    return document.dispatchEvent(SPACE.Track.ON_STOP());
  };

  Jukebox.prototype.tmpPosition = 0;

  Jukebox.prototype._whileplaying = function() {
    var datas, i, _i;
    datas = Array(256);
    for (i = _i = 0; _i <= 127; i = ++_i) {
      datas[i] = Math.max(this.current.sound.waveformData.left[i], this.current.sound.waveformData.right[i]);
      datas[255 - i] = Math.max(this.current.sound.waveformData.left[i], this.current.sound.waveformData.right[i]);
    }
    if (this.current.sound.paused) {
      return this.eq.mute();
    } else {
      return this.eq.setNewValues(datas);
    }
  };

  return Jukebox;

})(SPACE.Scene);

//# sourceMappingURL=data:application/json;base64,