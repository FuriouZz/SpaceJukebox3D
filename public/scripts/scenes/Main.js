var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SPACE.MainScene = (function(_super) {
  __extends(MainScene, _super);

  MainScene.prototype.playlist = null;

  MainScene.prototype.current = null;

  function MainScene(bg) {
    this._whileplaying = __bind(this._whileplaying, this);
    this._eTrackOnAdd = __bind(this._eTrackOnAdd, this);
    var middlePoint;
    MainScene.__super__.constructor.call(this, bg);
    middlePoint = new PIXI.Point(window.innerWidth * .5, window.innerHeight * .5);
    this.eq = new SPACE.Equalizer(middlePoint, {
      minLength: 0,
      maxLength: 200,
      radius: 250
    });
    this.addChild(this.eq);
    this.sc = new SPACE.SoundCloud(SPACE.SOUNDCLOUD.id);
    this._events();
    this.jukebox = new SPACE.Jukebox();
    this.jukebox.whileplaying = this._whileplaying;
  }

  MainScene.prototype._events = function() {
    return document.addEventListener(JUKEBOX.TRACK_ON_ADD.type, this._eTrackOnAdd);
  };

  MainScene.prototype._eTrackOnAdd = function(e) {
    var spaceship, track;
    spaceship = new SPACE.Spaceship(this.eq.center, this.eq.radius);
    this.addChild(spaceship);
    track = e.object.track;
    track.spaceship = spaceship;
    HELPERS.trigger(JUKEBOX.TRACK_ADDED, {
      track: track
    });
    this.dotted = new SPACE.DottedLine(track);
    return this.addChild(this.dotted);
  };

  MainScene.prototype._predefinedPlaylist = function() {
    this.add('https://soundcloud.com/chonch-2/courte-danse-macabre');
    this.add('https://soundcloud.com/chonch-2/mouais');
    this.add('https://soundcloud.com/huhwhatandwhere/sets/supreme-laziness-the-celestics');
    this.add('https://soundcloud.com/chonch-2/cacaco-2');
    this.add('https://soundcloud.com/chonch-2/duodenum');
    return this.add('https://soundcloud.com/chonch-2/little-green-monkey');
  };

  MainScene.prototype.draw = function() {
    return this.eq.draw();
  };

  MainScene.prototype.update = function(delta) {
    MainScene.__super__.update.apply(this, arguments);
    return this.jukebox.update(delta);
  };

  MainScene.prototype._whileplaying = function() {
    var datas, i, sound, _i;
    sound = this.jukebox.current.sound;
    datas = Array(256);
    for (i = _i = 0; _i <= 127; i = ++_i) {
      datas[i] = Math.max(sound.waveformData.left[i], sound.waveformData.right[i]);
      datas[255 - i] = Math.max(sound.waveformData.left[i], sound.waveformData.right[i]);
    }
    if (sound.paused) {
      return this.eq.mute();
    } else {
      return this.eq.setNewValues(datas);
    }
  };

  return MainScene;

})(SPACE.Scene);

//# sourceMappingURL=data:application/json;base64,