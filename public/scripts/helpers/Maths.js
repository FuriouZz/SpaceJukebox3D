var _Math;

_Math = _Math || {
  angleBetweenPoints: function(first, second) {
    var height, width;
    height = second.y - first.y;
    width = second.x - first.x;
    return Math.atan2(height, width);
  },
  distance: function(point1, point2) {
    var d, x, y;
    x = point1.x - point2.x;
    y = point1.y - point2.y;
    d = x * x + y * y;
    return Math.sqrt(d);
  },
  collision: function(dot1, dot2) {
    var dist, r1, r2;
    r1 = dot1.radius ? dot1.radius : 0;
    r2 = dot2.radius ? dot2.radius : 0;
    dist = r1 + r2;
    return this.distance(dot1.position, dot2.position) <= Math.sqrt(dist * dist);
  },
  map: function(value, low1, high1, low2, high2) {
    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);
  },
  hermite: function(y0, y1, y2, y3, mu, tension, bias) {
    
    var m0,m1,mu2,mu3;
    var a0,a1,a2,a3;

    mu2 = mu * mu;
    mu3 = mu2 * mu;
    m0  = (y1-y0)*(1+bias)*(1-tension)/2;
    m0 += (y2-y1)*(1-bias)*(1-tension)/2;
    m1  = (y2-y1)*(1+bias)*(1-tension)/2;
    m1 += (y3-y2)*(1-bias)*(1-tension)/2;
    a0 =  2*mu3 - 3*mu2 + 1;
    a1 =    mu3 - 2*mu2 + mu;
    a2 =    mu3 -   mu2;
    a3 = -2*mu3 + 3*mu2;
    ;
    return a0 * y1 + a1 * m0 + a2 * m1 + a3 * y2;
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMvTWF0aHMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsS0FBQTs7QUFBQSxLQUFBLEdBQVEsS0FBQSxJQUFTO0FBQUEsRUFDZixrQkFBQSxFQUFvQixTQUFDLEtBQUQsRUFBUSxNQUFSLEdBQUE7QUFDbEIsUUFBQSxhQUFBO0FBQUEsSUFBQSxNQUFBLEdBQVMsTUFBTSxDQUFDLENBQVAsR0FBVyxLQUFLLENBQUMsQ0FBMUIsQ0FBQTtBQUFBLElBQ0EsS0FBQSxHQUFTLE1BQU0sQ0FBQyxDQUFQLEdBQVcsS0FBSyxDQUFDLENBRDFCLENBQUE7QUFFQSxXQUFPLElBQUksQ0FBQyxLQUFMLENBQVcsTUFBWCxFQUFtQixLQUFuQixDQUFQLENBSGtCO0VBQUEsQ0FETDtBQUFBLEVBTWYsUUFBQSxFQUFVLFNBQUMsTUFBRCxFQUFTLE1BQVQsR0FBQTtBQUNSLFFBQUEsT0FBQTtBQUFBLElBQUEsQ0FBQSxHQUFJLE1BQU0sQ0FBQyxDQUFQLEdBQVcsTUFBTSxDQUFDLENBQXRCLENBQUE7QUFBQSxJQUNBLENBQUEsR0FBSSxNQUFNLENBQUMsQ0FBUCxHQUFXLE1BQU0sQ0FBQyxDQUR0QixDQUFBO0FBQUEsSUFFQSxDQUFBLEdBQUksQ0FBQSxHQUFJLENBQUosR0FBUSxDQUFBLEdBQUksQ0FGaEIsQ0FBQTtBQUdBLFdBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxDQUFWLENBQVAsQ0FKUTtFQUFBLENBTks7QUFBQSxFQVlmLFNBQUEsRUFBVyxTQUFDLElBQUQsRUFBTyxJQUFQLEdBQUE7QUFDVCxRQUFBLFlBQUE7QUFBQSxJQUFBLEVBQUEsR0FBUSxJQUFJLENBQUMsTUFBUixHQUFvQixJQUFJLENBQUMsTUFBekIsR0FBcUMsQ0FBMUMsQ0FBQTtBQUFBLElBQ0EsRUFBQSxHQUFRLElBQUksQ0FBQyxNQUFSLEdBQW9CLElBQUksQ0FBQyxNQUF6QixHQUFxQyxDQUQxQyxDQUFBO0FBQUEsSUFFQSxJQUFBLEdBQU8sRUFBQSxHQUFLLEVBRlosQ0FBQTtBQUlBLFdBQU8sSUFBQyxDQUFBLFFBQUQsQ0FBVSxJQUFJLENBQUMsUUFBZixFQUF5QixJQUFJLENBQUMsUUFBOUIsQ0FBQSxJQUEyQyxJQUFJLENBQUMsSUFBTCxDQUFVLElBQUEsR0FBTyxJQUFqQixDQUFsRCxDQUxTO0VBQUEsQ0FaSTtBQUFBLEVBbUJmLEdBQUEsRUFBSyxTQUFDLEtBQUQsRUFBUSxJQUFSLEVBQWMsS0FBZCxFQUFxQixJQUFyQixFQUEyQixLQUEzQixHQUFBO0FBQ0gsV0FBTyxJQUFBLEdBQU8sQ0FBQyxLQUFBLEdBQVEsSUFBVCxDQUFBLEdBQWlCLENBQUMsS0FBQSxHQUFRLElBQVQsQ0FBakIsR0FBa0MsQ0FBQyxLQUFBLEdBQVEsSUFBVCxDQUFoRCxDQURHO0VBQUEsQ0FuQlU7QUFBQSxFQXVCZixPQUFBLEVBQVMsU0FBQyxFQUFELEVBQUssRUFBTCxFQUFTLEVBQVQsRUFBYSxFQUFiLEVBQWlCLEVBQWpCLEVBQXFCLE9BQXJCLEVBQThCLElBQTlCLEdBQUE7QUFDUCxJQUFBOzs7Ozs7Ozs7Ozs7OztJQUFBLENBQUE7QUFlQSxXQUFPLEVBQUEsR0FBRyxFQUFILEdBQU0sRUFBQSxHQUFHLEVBQVQsR0FBWSxFQUFBLEdBQUcsRUFBZixHQUFrQixFQUFBLEdBQUcsRUFBNUIsQ0FoQk87RUFBQSxDQXZCTTtDQUFqQixDQUFBIiwiZmlsZSI6ImhlbHBlcnMvTWF0aHMuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJfTWF0aCA9IF9NYXRoIHx8IHtcbiAgYW5nbGVCZXR3ZWVuUG9pbnRzOiAoZmlyc3QsIHNlY29uZCkgLT5cbiAgICBoZWlnaHQgPSBzZWNvbmQueSAtIGZpcnN0LnlcbiAgICB3aWR0aCAgPSBzZWNvbmQueCAtIGZpcnN0LnhcbiAgICByZXR1cm4gTWF0aC5hdGFuMihoZWlnaHQsIHdpZHRoKVxuXG4gIGRpc3RhbmNlOiAocG9pbnQxLCBwb2ludDIpIC0+XG4gICAgeCA9IHBvaW50MS54IC0gcG9pbnQyLnhcbiAgICB5ID0gcG9pbnQxLnkgLSBwb2ludDIueVxuICAgIGQgPSB4ICogeCArIHkgKiB5XG4gICAgcmV0dXJuIE1hdGguc3FydChkKVxuXG4gIGNvbGxpc2lvbjogKGRvdDEsIGRvdDIpLT5cbiAgICByMSA9IGlmIGRvdDEucmFkaXVzIHRoZW4gZG90MS5yYWRpdXMgZWxzZSAwXG4gICAgcjIgPSBpZiBkb3QyLnJhZGl1cyB0aGVuIGRvdDIucmFkaXVzIGVsc2UgMFxuICAgIGRpc3QgPSByMSArIHIyXG5cbiAgICByZXR1cm4gQGRpc3RhbmNlKGRvdDEucG9zaXRpb24sIGRvdDIucG9zaXRpb24pIDw9IE1hdGguc3FydChkaXN0ICogZGlzdClcblxuICBtYXA6ICh2YWx1ZSwgbG93MSwgaGlnaDEsIGxvdzIsIGhpZ2gyKSAtPlxuICAgIHJldHVybiBsb3cyICsgKGhpZ2gyIC0gbG93MikgKiAodmFsdWUgLSBsb3cxKSAvIChoaWdoMSAtIGxvdzEpXG5cbiAgIyBIZXJtaXRlIEN1cnZlXG4gIGhlcm1pdGU6ICh5MCwgeTEsIHkyLCB5MywgbXUsIHRlbnNpb24sIGJpYXMpLT5cbiAgICBgXG4gICAgdmFyIG0wLG0xLG11MixtdTM7XG4gICAgdmFyIGEwLGExLGEyLGEzO1xuXG4gICAgbXUyID0gbXUgKiBtdTtcbiAgICBtdTMgPSBtdTIgKiBtdTtcbiAgICBtMCAgPSAoeTEteTApKigxK2JpYXMpKigxLXRlbnNpb24pLzI7XG4gICAgbTAgKz0gKHkyLXkxKSooMS1iaWFzKSooMS10ZW5zaW9uKS8yO1xuICAgIG0xICA9ICh5Mi15MSkqKDErYmlhcykqKDEtdGVuc2lvbikvMjtcbiAgICBtMSArPSAoeTMteTIpKigxLWJpYXMpKigxLXRlbnNpb24pLzI7XG4gICAgYTAgPSAgMiptdTMgLSAzKm11MiArIDE7XG4gICAgYTEgPSAgICBtdTMgLSAyKm11MiArIG11O1xuICAgIGEyID0gICAgbXUzIC0gICBtdTI7XG4gICAgYTMgPSAtMiptdTMgKyAzKm11MjtcbiAgICBgXG4gICAgcmV0dXJuKGEwKnkxK2ExKm0wK2EyKm0xK2EzKnkyKVxufVxuIl19