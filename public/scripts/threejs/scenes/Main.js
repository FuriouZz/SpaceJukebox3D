var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SPACE.MainScene = (function(_super) {
  __extends(MainScene, _super);

  MainScene.prototype.equalizer = null;

  MainScene.prototype.jukebox = null;

  MainScene.prototype.waveformData = null;

  function MainScene() {
    this._whileplaying = __bind(this._whileplaying, this);
    this._eTrackOnAdd = __bind(this._eTrackOnAdd, this);
    var middlePoint, options;
    MainScene.__super__.constructor.apply(this, arguments);
    middlePoint = new THREE.Vector3(0, 0, 0);
    options = {
      minLength: 0,
      maxLength: 100,
      radius: 250
    };
    this.equalizer = new SPACE.Equalizer(middlePoint, options);
    this.add(this.equalizer);
    this.jukebox = new SPACE.Jukebox();
    this.jukebox.whileplaying = this._whileplaying;
    this.spaceship = new SPACE.Spaceship(middlePoint, this.equalizer.radius);
    this.add(this.spaceship);
    this.waveformData = {};
    this._events();
  }

  MainScene.prototype._events = function() {
    return document.addEventListener(JUKEBOX.TRACK_ON_ADD.type, this._eTrackOnAdd);
  };

  MainScene.prototype._eTrackOnAdd = function(e) {
    var track;
    track = e.object.track;
    track.spaceship = null;
    return HELPERS.trigger(JUKEBOX.TRACK_ADDED, {
      track: track
    });
  };

  MainScene.prototype.setupSomething = function() {
    var g, light, m, speed;
    g = new THREE.BoxGeometry(100, 100, 100);
    m = new THREE.MeshLambertMaterial({
      color: 0x0088ff,
      shading: THREE.FlatShading
    });
    this.cube = new THREE.Mesh(g, m);
    this.cube.rotation.set(Math.random(), Math.random(), Math.random());
    this.cube.castShadow = true;
    this.cube.receiveShadow = true;
    this.add(this.cube);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .2);
    light.position.set(500, 500, 500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .6);
    light.position.set(-500, 500, 500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .2);
    light.position.set(500, -500, 500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .2);
    light.position.set(-500, -500, 500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .1);
    light.position.set(500, 500, -500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .1);
    light.position.set(-500, 500, -500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .1);
    light.position.set(500, -500, -500);
    this.add(light);
    light = new THREE.DirectionalLight(0xFFFFFF, 1.8 * .1);
    light.position.set(-500, -500, -500);
    this.add(light);
    speed = {
      x: Math.random() * 0.005,
      y: Math.random() * 0.005,
      z: Math.random() * 0.005
    };
    return this.cube.update = function() {
      this.rotation.x += speed.x;
      this.rotation.y += speed.y;
      return this.rotation.z += speed.z;
    };
  };

  MainScene.prototype.update = function(delta) {
    MainScene.__super__.update.call(this, delta);
    this.jukebox.update(delta);
    if (this.jukebox.state === SPACE.Jukebox.IS_PLAYING) {
      if (this.jukebox.current.sound.paused) {
        return this.equalizer.mute();
      } else if (this.waveformData.hasOwnProperty('mono')) {
        return this.equalizer.setValues(this.waveformData.mono);
      }
    }
  };

  MainScene.prototype._whileplaying = function() {
    var datas, i, sound, _i;
    sound = this.jukebox.current.sound;
    datas = Array(256);
    for (i = _i = 0; _i <= 127; i = ++_i) {
      datas[i] = Math.max(sound.waveformData.left[i], sound.waveformData.right[i]);
      datas[255 - i] = Math.max(sound.waveformData.left[i], sound.waveformData.right[i]);
    }
    this.waveformData.mono = datas;
    return this.waveformData.stereo = sound.waveformData;
  };

  return MainScene;

})(SPACE.Scene);

//# sourceMappingURL=data:application/json;base64,