THREE.HermiteBezierCurve3 = THREE.Curve.create(function(v0, v1, v2, v3) {
  this.v0 = v0;
  this.v1 = v1;
  this.v2 = v2;
  this.v3 = v3;
}, function(t) {
  var vector;
  vector = new THREE.Vector3();
  vector.x = HELPERS.Hermite(this.v0.x, this.v1.x, this.v2.x, this.v3.x, t, 0, 0);
  vector.y = HELPERS.Hermite(this.v0.y, this.v1.y, this.v2.y, this.v3.y, t, 0, 0);
  vector.z = HELPERS.Hermite(this.v0.z, this.v1.z, this.v2.z, this.v3.z, t, 0, 0);
  return vector;
});

THREE.IncomingCurve = THREE.Curve.create(function(v0, maxRadius, minRadius, inverse) {
  if (maxRadius == null) {
    maxRadius = 100;
  }
  if (minRadius == null) {
    minRadius = 0;
  }
  if (inverse == null) {
    inverse = false;
  }
  this.v0 = v0;
  this.inverse = inverse;
  this.maxRadius = maxRadius;
  this.minRadius = minRadius;
  this.radius = this.maxRadius - this.minRadius;
}, function(t) {
  var angle, vector;
  if (this.inverse) {
    t = 1 - t;
  }
  angle = Math.PI * 2 * t;
  vector = new THREE.Vector3();
  vector.x = this.v0.x + Math.cos(angle) * (this.minRadius + this.radius * t);
  vector.y = this.v0.y + Math.sin(angle) * (this.minRadius + this.radius * t);
  vector.z = this.v0.z;
  return vector;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRocmVlanMvaGVscGVycy9leHRyYXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssQ0FBQyxtQkFBTixHQUE0QixLQUFLLENBQUMsS0FBSyxDQUFDLE1BQVosQ0FDMUIsU0FBQyxFQUFELEVBQUssRUFBTCxFQUFTLEVBQVQsRUFBYSxFQUFiLEdBQUE7QUFDRSxFQUFBLElBQUMsQ0FBQSxFQUFELEdBQU0sRUFBTixDQUFBO0FBQUEsRUFDQSxJQUFDLENBQUEsRUFBRCxHQUFNLEVBRE4sQ0FBQTtBQUFBLEVBRUEsSUFBQyxDQUFBLEVBQUQsR0FBTSxFQUZOLENBQUE7QUFBQSxFQUdBLElBQUMsQ0FBQSxFQUFELEdBQU0sRUFITixDQURGO0FBQUEsQ0FEMEIsRUFPeEIsU0FBQyxDQUFELEdBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQSxFQUFBLE1BQUEsR0FBYSxJQUFBLEtBQUssQ0FBQyxPQUFOLENBQUEsQ0FBYixDQUFBO0FBQUEsRUFDQSxNQUFNLENBQUMsQ0FBUCxHQUFXLE9BQU8sQ0FBQyxPQUFSLENBQWdCLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBeEIsRUFBMkIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFuQyxFQUFzQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQTlDLEVBQWlELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBekQsRUFBNEQsQ0FBNUQsRUFBK0QsQ0FBL0QsRUFBa0UsQ0FBbEUsQ0FEWCxDQUFBO0FBQUEsRUFFQSxNQUFNLENBQUMsQ0FBUCxHQUFXLE9BQU8sQ0FBQyxPQUFSLENBQWdCLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBeEIsRUFBMkIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFuQyxFQUFzQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQTlDLEVBQWlELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBekQsRUFBNEQsQ0FBNUQsRUFBK0QsQ0FBL0QsRUFBa0UsQ0FBbEUsQ0FGWCxDQUFBO0FBQUEsRUFHQSxNQUFNLENBQUMsQ0FBUCxHQUFXLE9BQU8sQ0FBQyxPQUFSLENBQWdCLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBeEIsRUFBMkIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFuQyxFQUFzQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQTlDLEVBQWlELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBekQsRUFBNEQsQ0FBNUQsRUFBK0QsQ0FBL0QsRUFBa0UsQ0FBbEUsQ0FIWCxDQUFBO0FBSUEsU0FBTyxNQUFQLENBTEE7QUFBQSxDQVB3QixDQUE1QixDQUFBOztBQUFBLEtBZUssQ0FBQyxhQUFOLEdBQXNCLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBWixDQUNwQixTQUFDLEVBQUQsRUFBSyxTQUFMLEVBQW9CLFNBQXBCLEVBQWlDLE9BQWpDLEdBQUE7O0lBQUssWUFBVTtHQUNiOztJQURrQixZQUFVO0dBQzVCOztJQUQrQixVQUFRO0dBQ3ZDO0FBQUEsRUFBQSxJQUFDLENBQUEsRUFBRCxHQUFhLEVBQWIsQ0FBQTtBQUFBLEVBQ0EsSUFBQyxDQUFBLE9BQUQsR0FBYSxPQURiLENBQUE7QUFBQSxFQUdBLElBQUMsQ0FBQSxTQUFELEdBQWEsU0FIYixDQUFBO0FBQUEsRUFJQSxJQUFDLENBQUEsU0FBRCxHQUFhLFNBSmIsQ0FBQTtBQUFBLEVBS0EsSUFBQyxDQUFBLE1BQUQsR0FBYSxJQUFDLENBQUEsU0FBRCxHQUFhLElBQUMsQ0FBQSxTQUwzQixDQURGO0FBQUEsQ0FEb0IsRUFVbEIsU0FBQyxDQUFELEdBQUE7QUFDQSxNQUFBLGFBQUE7QUFBQSxFQUFBLElBQWlCLElBQUMsQ0FBQSxPQUFsQjtBQUFBLElBQUEsQ0FBQSxHQUFRLENBQUEsR0FBSSxDQUFaLENBQUE7R0FBQTtBQUFBLEVBQ0EsS0FBQSxHQUFRLElBQUksQ0FBQyxFQUFMLEdBQVUsQ0FBVixHQUFjLENBRHRCLENBQUE7QUFBQSxFQUdBLE1BQUEsR0FBYSxJQUFBLEtBQUssQ0FBQyxPQUFOLENBQUEsQ0FIYixDQUFBO0FBQUEsRUFJQSxNQUFNLENBQUMsQ0FBUCxHQUFXLElBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBSixHQUFRLElBQUksQ0FBQyxHQUFMLENBQVMsS0FBVCxDQUFBLEdBQWtCLENBQUMsSUFBQyxDQUFBLFNBQUQsR0FBYSxJQUFDLENBQUEsTUFBRCxHQUFVLENBQXhCLENBSnJDLENBQUE7QUFBQSxFQUtBLE1BQU0sQ0FBQyxDQUFQLEdBQVcsSUFBQyxDQUFBLEVBQUUsQ0FBQyxDQUFKLEdBQVEsSUFBSSxDQUFDLEdBQUwsQ0FBUyxLQUFULENBQUEsR0FBa0IsQ0FBQyxJQUFDLENBQUEsU0FBRCxHQUFhLElBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBeEIsQ0FMckMsQ0FBQTtBQUFBLEVBTUEsTUFBTSxDQUFDLENBQVAsR0FBVyxJQUFDLENBQUEsRUFBRSxDQUFDLENBTmYsQ0FBQTtBQU9BLFNBQU8sTUFBUCxDQVJBO0FBQUEsQ0FWa0IsQ0FmdEIsQ0FBQSIsImZpbGUiOiJ0aHJlZWpzL2hlbHBlcnMvZXh0cmFzLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiVEhSRUUuSGVybWl0ZUJlemllckN1cnZlMyA9IFRIUkVFLkN1cnZlLmNyZWF0ZShcbiAgKHYwLCB2MSwgdjIsIHYzKS0+XG4gICAgQHYwID0gdjBcbiAgICBAdjEgPSB2MVxuICAgIEB2MiA9IHYyXG4gICAgQHYzID0gdjNcbiAgICByZXR1cm5cbiAgLCAodCktPlxuICAgIHZlY3RvciA9IG5ldyBUSFJFRS5WZWN0b3IzKClcbiAgICB2ZWN0b3IueCA9IEhFTFBFUlMuSGVybWl0ZSh0aGlzLnYwLngsIHRoaXMudjEueCwgdGhpcy52Mi54LCB0aGlzLnYzLngsIHQsIDAsIDApXG4gICAgdmVjdG9yLnkgPSBIRUxQRVJTLkhlcm1pdGUodGhpcy52MC55LCB0aGlzLnYxLnksIHRoaXMudjIueSwgdGhpcy52My55LCB0LCAwLCAwKVxuICAgIHZlY3Rvci56ID0gSEVMUEVSUy5IZXJtaXRlKHRoaXMudjAueiwgdGhpcy52MS56LCB0aGlzLnYyLnosIHRoaXMudjMueiwgdCwgMCwgMClcbiAgICByZXR1cm4gdmVjdG9yXG4pXG5cblRIUkVFLkluY29taW5nQ3VydmUgPSBUSFJFRS5DdXJ2ZS5jcmVhdGUoXG4gICh2MCwgbWF4UmFkaXVzPTEwMCwgbWluUmFkaXVzPTAsIGludmVyc2U9ZmFsc2UpLT5cbiAgICBAdjAgICAgICAgID0gdjBcbiAgICBAaW52ZXJzZSAgID0gaW52ZXJzZVxuXG4gICAgQG1heFJhZGl1cyA9IG1heFJhZGl1c1xuICAgIEBtaW5SYWRpdXMgPSBtaW5SYWRpdXNcbiAgICBAcmFkaXVzICAgID0gQG1heFJhZGl1cyAtIEBtaW5SYWRpdXNcblxuICAgIHJldHVyblxuICAsICh0KS0+XG4gICAgdCAgICAgPSAxIC0gdCBpZiBAaW52ZXJzZVxuICAgIGFuZ2xlID0gTWF0aC5QSSAqIDIgKiB0XG5cbiAgICB2ZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMygpXG4gICAgdmVjdG9yLnggPSBAdjAueCArIE1hdGguY29zKGFuZ2xlKSAqIChAbWluUmFkaXVzICsgQHJhZGl1cyAqIHQpXG4gICAgdmVjdG9yLnkgPSBAdjAueSArIE1hdGguc2luKGFuZ2xlKSAqIChAbWluUmFkaXVzICsgQHJhZGl1cyAqIHQpXG4gICAgdmVjdG9yLnogPSBAdjAuelxuICAgIHJldHVybiB2ZWN0b3JcbilcbiJdfQ==