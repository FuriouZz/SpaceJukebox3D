var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SPACE.SceneManager = (function() {
  SceneManager.prototype.currentScene = null;

  SceneManager.prototype._scenes = null;

  SceneManager.prototype._stats = null;

  SceneManager.prototype._tick = 0;

  SceneManager.prototype._renderer = null;

  SceneManager.prototype._camera = null;

  function SceneManager(width, height) {
    this._update = __bind(this._update, this);
    this._render = __bind(this._render, this);
    if (this._renderer) {
      return this;
    }
    this._tick = Date.now();
    this._scenes = [];
    this._camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    this._camera.position.setZ(500);
    this._renderer = new THREE.WebGLRenderer({
      antialias: true
    });
    this._renderer.setClearColor(new THREE.Color(0xFFF0DB));
    this._renderer.setSize(window.innerWidth, window.innerHeight);
    this._renderer.shadozMapEnabled = true;
    this._renderer.shadozMapSoft = true;
    this._renderer.shadozMapType = THREE.PCFShadowMap;
    document.getElementById('wrapper').appendChild(this._renderer.domElement);
    if (SPACE.ENV === 'development') {
      this._setupStats();
    }
    this._render();
    this._update();
    window.onresize = (function(_this) {
      return function() {
        _this._renderer.setSize(window.innerWidth, window.innerHeight);
        _this._camera.aspect = window.innerWidth / window.innerHeight;
        return _this._camera.updateProjectionMatrix();
      };
    })(this);
  }

  SceneManager.prototype._setupStats = function() {
    this._stats = new Stats();
    this._stats.setMode(0);
    this._stats.domElement.style.position = 'absolute';
    this._stats.domElement.style.left = '0px';
    this._stats.domElement.style.top = '0px';
    return document.body.appendChild(this._stats.domElement);
  };

  SceneManager.prototype._render = function() {
    if (SPACE.ENV === 'development') {
      this._stats.begin();
    }
    window.requestAnimationFrame(this._render);
    if (!this.currentScene || this.currentScene.isPaused()) {
      return;
    }
    this._renderer.render(this.currentScene, this._camera);
    if (SPACE.ENV === 'development') {
      return this._stats.end();
    }
  };

  SceneManager.prototype._update = function() {
    var c;
    setTimeout(this._update, 1000 / SPACE.FPS);
    if (!this.currentScene || this.currentScene.isPaused()) {
      return;
    }
    c = Date.now();
    this.currentScene.update(c - this._tick);
    return this._tick = c;
  };

  SceneManager.prototype.createScene = function(identifier, aScene, interactive) {
    var scene;
    if (this._scenes[identifier]) {
      return void 0;
    }
    scene = new aScene();
    this._scenes[identifier] = scene;
    return scene;
  };

  SceneManager.prototype.goToScene = function(identifier) {
    if (this._scenes[identifier]) {
      if (this.currentScene) {
        this.currentScene.pause();
      }
      this.currentScene = this._scenes[identifier];
      this.currentScene.resume();
      this.debug();
      return true;
    }
    return false;
  };

  SceneManager.prototype.debug = function() {};

  return SceneManager;

})();

//# sourceMappingURL=data:application/json;base64,