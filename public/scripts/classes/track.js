var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SPACE.Track = (function() {
  Track.prototype.data = null;

  Track.prototype.spaceship = null;

  Track.prototype.sound = null;

  Track.prototype.time = 0;

  Track.prototype.pendingDuration = 0;

  Track.prototype.JukeBoxisPlaying = false;

  function Track(data) {
    this._eJukeboxIsStopped = __bind(this._eJukeboxIsStopped, this);
    this._eJukeboxIsPlaying = __bind(this._eJukeboxIsPlaying, this);
    this.data = data;
    this._events();
  }

  Track.prototype._events = function() {
    document.addEventListener(JUKEBOX.IS_PLAYING.type, this._eJukeboxIsPlaying);
    return document.addEventListener(JUKEBOX.IS_STOPPED.type, this._eJukeboxIsStopped);
  };

  Track.prototype._eJukeboxIsPlaying = function() {
    return this.JukeBoxisPlaying = true;
  };

  Track.prototype._eJukeboxIsStopped = function() {
    this.JukeBoxisPlaying = false;
    return console.log('i said stop');
  };

  Track.prototype.update = function(delta) {
    if (this.JukeBoxisPlaying) {
      this.time += delta;
    }
    if (this.pendingDuration > 0 && (this.pendingDuration - this.time) < 15 * 60 * 1000 && this.spaceship.state === SPACESHIP.IDLE && this.JukeBoxisPlaying) {
      SPACE.LOG('Spaceship launched : ' + this.data.title);
      this.spaceship.setState(SPACESHIP.LAUNCHED);
      this.spaceship.duration = this.spaceship.time = this.pendingDuration - this.time;
    }
    if (this.spaceship.state === SPACESHIP.LAUNCHED) {
      this.spaceship.duration = this.spaceship.time = this.pendingDuration - this.time;
    }
    if (this.spaceship.state === SPACESHIP.IN_LOOP) {
      this.spaceship.time = this.pendingDuration - this.time;
    }
    return this.spaceship.update(delta);
  };

  return Track;

})();

//# sourceMappingURL=data:application/json;base64,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SUFBQyxDQUFBLFNBQVMsQ0FBQyxNQUFYLENBQWtCLEtBQWxCLEVBZk07RUFBQSxDQTFCUixDQUFBOztlQUFBOztJQUZGLENBQUEiLCJmaWxlIjoiY2xhc3Nlcy90cmFjay5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFNQQUNFLlRyYWNrXG5cbiAgZGF0YTogICAgICBudWxsXG4gIHNwYWNlc2hpcDogbnVsbFxuXG4gIHNvdW5kOiAgICAgbnVsbFxuXG4gIHRpbWU6ICAgICAgMFxuXG4gIHBlbmRpbmdEdXJhdGlvbjogMFxuXG4gIEp1a2VCb3hpc1BsYXlpbmc6IGZhbHNlXG5cbiAgY29uc3RydWN0b3I6IChkYXRhKS0+XG4gICAgQGRhdGEgPSBkYXRhXG4gICAgQF9ldmVudHMoKVxuXG4gIF9ldmVudHM6IC0+XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihKVUtFQk9YLklTX1BMQVlJTkcudHlwZSwgQF9lSnVrZWJveElzUGxheWluZylcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKEpVS0VCT1guSVNfU1RPUFBFRC50eXBlLCBAX2VKdWtlYm94SXNTdG9wcGVkKVxuXG4gIF9lSnVrZWJveElzUGxheWluZzogPT5cbiAgICBASnVrZUJveGlzUGxheWluZyA9IHRydWVcblxuICBfZUp1a2Vib3hJc1N0b3BwZWQ6ID0+XG4gICAgQEp1a2VCb3hpc1BsYXlpbmcgPSBmYWxzZVxuICAgIGNvbnNvbGUubG9nICdpIHNhaWQgc3RvcCdcblxuICB1cGRhdGU6IChkZWx0YSktPlxuICAgIGlmIEBKdWtlQm94aXNQbGF5aW5nXG4gICAgICBAdGltZSArPSBkZWx0YVxuXG4gICAgaWYgQHBlbmRpbmdEdXJhdGlvbiA+IDAgYW5kIChAcGVuZGluZ0R1cmF0aW9uIC0gQHRpbWUpIDwgMTUqNjAqMTAwMCBhbmQgQHNwYWNlc2hpcC5zdGF0ZSA9PSBTUEFDRVNISVAuSURMRSBhbmQgQEp1a2VCb3hpc1BsYXlpbmdcbiAgICAgIFNQQUNFLkxPRygnU3BhY2VzaGlwIGxhdW5jaGVkIDogJytAZGF0YS50aXRsZSlcbiAgICAgIEBzcGFjZXNoaXAuc2V0U3RhdGUoU1BBQ0VTSElQLkxBVU5DSEVEKVxuICAgICAgQHNwYWNlc2hpcC5kdXJhdGlvbiA9IEBzcGFjZXNoaXAudGltZSA9IChAcGVuZGluZ0R1cmF0aW9uIC0gQHRpbWUpXG5cbiAgICBpZiBAc3BhY2VzaGlwLnN0YXRlID09IFNQQUNFU0hJUC5MQVVOQ0hFRFxuICAgICAgQHNwYWNlc2hpcC5kdXJhdGlvbiA9IEBzcGFjZXNoaXAudGltZSA9IChAcGVuZGluZ0R1cmF0aW9uIC0gQHRpbWUpXG5cbiAgICBpZiBAc3BhY2VzaGlwLnN0YXRlID09IFNQQUNFU0hJUC5JTl9MT09QXG4gICAgICBAc3BhY2VzaGlwLnRpbWUgPSAoQHBlbmRpbmdEdXJhdGlvbiAtIEB0aW1lKVxuXG4gICAgQHNwYWNlc2hpcC51cGRhdGUoZGVsdGEpXG4iXX0=