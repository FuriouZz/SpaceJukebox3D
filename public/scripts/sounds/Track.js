var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SPACE.Track = (function() {
  Track.prototype.data = null;

  Track.prototype.spaceship = null;

  Track.prototype.sound = null;

  Track.prototype.time = 0;

  Track.prototype.pendingDuration = 0;

  Track.prototype.JukeBoxisPlaying = false;

  function Track(data) {
    this._eJukeboxIsStopped = __bind(this._eJukeboxIsStopped, this);
    this._eJukeboxIsPlaying = __bind(this._eJukeboxIsPlaying, this);
    this.data = data;
    this._events();
  }

  Track.prototype._events = function() {
    document.addEventListener(JUKEBOX.IS_PLAYING.type, this._eJukeboxIsPlaying);
    return document.addEventListener(JUKEBOX.IS_STOPPED.type, this._eJukeboxIsStopped);
  };

  Track.prototype._eJukeboxIsPlaying = function() {
    return this.JukeBoxisPlaying = true;
  };

  Track.prototype._eJukeboxIsStopped = function() {
    return this.JukeBoxisPlaying = false;
  };

  Track.prototype.update = function(delta) {
    if (this.JukeBoxisPlaying) {
      this.time += delta;
    }
    if (this.pendingDuration > 0 && (this.pendingDuration - this.time) < 1 * 60 * 1000 && this.spaceship.state === SPACE.Spaceship.IDLE && this.JukeBoxisPlaying) {
      SPACE.LOG('Spaceship launched : ' + this.data.title);
      this.spaceship.setState(SPACE.Spaceship.LAUNCHED);
    }
    if (this.spaceship.state === SPACE.Spaceship.LAUNCHED) {
      this.spaceship.songDuration = this.pendingDuration - this.time;
    }
    if (this.spaceship.state === SPACE.Spaceship.IN_LOOP) {
      this.spaceship.time = this.spaceship.songDuration - (this.pendingDuration - this.time);
    }
    if (this.spaceship.state === SPACE.Spaceship.ARRIVED) {
      this.JukeBoxisPlaying = false;
    }
    return this.spaceship.update(delta);
  };

  return Track;

})();

//# sourceMappingURL=data:application/json;base64,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QWJBO1dBZ0JBLElBQUMsQ0FBQSxTQUFTLENBQUMsTUFBWCxDQUFrQixLQUFsQixFQWpCTTtFQUFBLENBMUJSLENBQUE7O2VBQUE7O0lBRkYsQ0FBQSIsImZpbGUiOiJzb3VuZHMvVHJhY2suanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTUEFDRS5UcmFja1xuXG4gIGRhdGE6ICAgICAgbnVsbFxuICBzcGFjZXNoaXA6IG51bGxcblxuICBzb3VuZDogICAgIG51bGxcblxuICB0aW1lOiAgICAgIDBcblxuICBwZW5kaW5nRHVyYXRpb246IDBcblxuICBKdWtlQm94aXNQbGF5aW5nOiBmYWxzZVxuXG4gIGNvbnN0cnVjdG9yOiAoZGF0YSktPlxuICAgIEBkYXRhID0gZGF0YVxuICAgIEBfZXZlbnRzKClcblxuICBfZXZlbnRzOiAtPlxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoSlVLRUJPWC5JU19QTEFZSU5HLnR5cGUsIEBfZUp1a2Vib3hJc1BsYXlpbmcpXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihKVUtFQk9YLklTX1NUT1BQRUQudHlwZSwgQF9lSnVrZWJveElzU3RvcHBlZClcblxuICBfZUp1a2Vib3hJc1BsYXlpbmc6ID0+XG4gICAgQEp1a2VCb3hpc1BsYXlpbmcgPSB0cnVlXG5cbiAgX2VKdWtlYm94SXNTdG9wcGVkOiA9PlxuICAgIEBKdWtlQm94aXNQbGF5aW5nID0gZmFsc2VcbiAgICAjIGNvbnNvbGUubG9nICdpIHNhaWQgc3RvcCcsIEBkYXRhLnRpdGxlXG5cbiAgdXBkYXRlOiAoZGVsdGEpLT5cbiAgICBpZiBASnVrZUJveGlzUGxheWluZ1xuICAgICAgQHRpbWUgKz0gZGVsdGFcblxuICAgIGlmIEBwZW5kaW5nRHVyYXRpb24gPiAwIGFuZCAoQHBlbmRpbmdEdXJhdGlvbiAtIEB0aW1lKSA8IDEqNjAqMTAwMCBhbmQgQHNwYWNlc2hpcC5zdGF0ZSA9PSBTUEFDRS5TcGFjZXNoaXAuSURMRSBhbmQgQEp1a2VCb3hpc1BsYXlpbmdcbiAgICAgIFNQQUNFLkxPRygnU3BhY2VzaGlwIGxhdW5jaGVkIDogJytAZGF0YS50aXRsZSlcbiAgICAgIEBzcGFjZXNoaXAuc2V0U3RhdGUoU1BBQ0UuU3BhY2VzaGlwLkxBVU5DSEVEKVxuXG4gICAgaWYgQHNwYWNlc2hpcC5zdGF0ZSA9PSBTUEFDRS5TcGFjZXNoaXAuTEFVTkNIRURcbiAgICAgIEBzcGFjZXNoaXAuc29uZ0R1cmF0aW9uID0gKEBwZW5kaW5nRHVyYXRpb24gLSBAdGltZSlcblxuICAgIGlmIEBzcGFjZXNoaXAuc3RhdGUgPT0gU1BBQ0UuU3BhY2VzaGlwLklOX0xPT1BcbiAgICAgIEBzcGFjZXNoaXAudGltZSA9IEBzcGFjZXNoaXAuc29uZ0R1cmF0aW9uIC0gKEBwZW5kaW5nRHVyYXRpb24gLSBAdGltZSlcblxuICAgIGlmIEBzcGFjZXNoaXAuc3RhdGUgPT0gU1BBQ0UuU3BhY2VzaGlwLkFSUklWRURcbiAgICAgIEBKdWtlQm94aXNQbGF5aW5nID0gZmFsc2UgICAgXG5cbiAgICBAc3BhY2VzaGlwLnVwZGF0ZShkZWx0YSlcbiJdfQ==